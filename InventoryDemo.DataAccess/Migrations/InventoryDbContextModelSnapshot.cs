// <auto-generated />
using System;
using InventoryDemo.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryDemo.DataAccess.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InventoryDemo.Entities.Abstracts.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Mobile Phones"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Computers"
                        });
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.PersonnelsProperties", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID", "PropertyID");

                    b.HasIndex("PropertyID");

                    b.ToTable("PersonnelsProperties");

                    b.HasData(
                        new
                        {
                            UserID = 2,
                            PropertyID = 1,
                            DueOn = new DateTime(2022, 12, 31, 23, 59, 59, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Property", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 7, 16, 22, 14, 17, 490, DateTimeKind.Local).AddTicks(16),
                            ImageURL = "https://cdn.vatanbilgisayar.com/Upload/PRODUCT/apple/thumb/v2-87996_large.jpg",
                            Name = "iPhone 8 PLUS",
                            Quantity = 10,
                            ShortDescription = "64 GB, UZAY GRİSİ"
                        });
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Personnel"
                        });
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Admin", b =>
                {
                    b.HasBaseType("InventoryDemo.Entities.Abstracts.User");

                    b.HasDiscriminator().HasValue("Admin");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Password = "Test",
                            RoleID = 1,
                            Username = "admin1"
                        });
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Personnel", b =>
                {
                    b.HasBaseType("InventoryDemo.Entities.Abstracts.User");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Personnel");

                    b.HasData(
                        new
                        {
                            ID = 2,
                            Password = "Test",
                            RoleID = 2,
                            Username = "mtarikg",
                            FullName = "Tarık Göl"
                        });
                });

            modelBuilder.Entity("InventoryDemo.Entities.Abstracts.User", b =>
                {
                    b.HasOne("InventoryDemo.Entities.Concretes.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.PersonnelsProperties", b =>
                {
                    b.HasOne("InventoryDemo.Entities.Concretes.Property", "Property")
                        .WithMany("Personnels")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InventoryDemo.Entities.Concretes.Personnel", "Personnel")
                        .WithMany("Properties")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Personnel");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Property", b =>
                {
                    b.HasOne("InventoryDemo.Entities.Concretes.Category", "Category")
                        .WithMany("Properties")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Category", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Property", b =>
                {
                    b.Navigation("Personnels");
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("InventoryDemo.Entities.Concretes.Personnel", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
